@model BusinessAnimationModule


<div class="business-segments-animation container">
    <div class="business-segments-animation__slider" id="sliderWrapper">
        <div class="business-segments-animation__content">
            <div class="business-segments-animation__box" data-section="all">
                <div data-aos="fade-up" data-aos-easing="linear" data-aos-duration="500">
                    <h1 class="h1">
                        @Html.Raw(Model?.Headline?.Value)
                    </h1>
                    <p class="plain-text">
                        @Html.Raw(Model?.CopyText?.Value)

                        <div class="scroll-indicator">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" width="32" height="32"
                                 preserveAspectRatio="xMidYMid meet"
                                 style="width: 100%; height: 100%; transform: translate3d(0px, 0px, 0px);">
                                <defs>
                                    <clipPath id="__lottie_element_5">
                                        <rect width="32" height="32" x="0" y="0"></rect>
                                    </clipPath>
                                </defs>
                                <g clip-path="url(#__lottie_element_5)">
                                    <g transform="matrix(1,0,0,1,0,0)" opacity="1" style="display: block;">
                                        <g opacity="1" transform="matrix(1,0,0,1,16,16)">
                                            <path stroke-linecap="butt" stroke-linejoin="miter" fill-opacity="0" stroke-miterlimit="10"
                                                  stroke="rgb(0,0,0)" stroke-opacity="1" stroke-width="2"
                                                  d=" M9,5 C9,9.949999809265137 4.949999809265137,14 0,14 C-4.949999809265137,14 -9,9.949999809265137 -9,5 C-9,5 -9,-5 -9,-5 C-9,-9.949999809265137 -4.949999809265137,-14 0,-14 C4.949999809265137,-14 9,-9.949999809265137 9,-5 C9,-5 9,5 9,5z">
                                            </path>
                                        </g>
                                        <g opacity="1" transform="matrix(1,0,0,1,0,0.6828159093856812)">
                                            <path class="scroll-indicator__line" stroke-linecap="round" stroke-linejoin="miter"
                                                  fill-opacity="0" stroke-miterlimit="10" stroke="rgb(0,0,0)" stroke-opacity="1"
                                                  stroke-width="2" d=" M16,8 C16,8 16,9.472999572753906 16,10.960000038146973"></path>
                                        </g>
                                    </g>
                                </g>
                            </svg>
                        </div>
                    </p>
                </div>
            </div>
            @if (Model?.Items != null && Model.Items.Any())
            {
                foreach (var item in Model.Items)
                {
                    <div class="business-segments-animation__box" data-section="@item?.Fields?.SectionName?.Value">
                        <div data-aos="fade-up" data-aos-easing="linear" data-aos-duration="500">
                            <h1 class="h1">
                                @Html.Raw(item?.Fields?.Title?.Value)
                            </h1>
                            <p class="plain-text">
                                @Html.Raw(item?.Fields?.CopyText?.Value)
                            </p>
                            <div class="business-segments-detail__tags">
                                @if (item?.Fields?.Tags != null && item.Fields.Tags.Any())
                                {
                                    <div class="blogpost-suggestion-item__blogpost-tags">
                                        @foreach (var tag in item.Fields.Tags)
                                        {
                                            <a href="@Model.BlogKeywordPage?.Fields?.Link?.Value?.Href/topics/@tag.Fields?.Title?.Value.ToLower()" class="business-segments-detail__tag">#@tag.Fields?.Title?.Value?.ToLower()</a>
                                        }
                                    </div>
                                }
                            </div>
                            <sc-link class="main-btn main-btn--black" asp-for="@item.Fields.Link" />
                        </div>
                    </div>
                }
            }
        </div>
        <div class="business-segments-animation__sections-circle img-wrapper-stretch">
            <lottie-player id="lottieAnimation" background="transparent" autoplay src="assets/lottie-animation/_start.json"></lottie-player>
            <div id="circleAnimation" class="hidden">
                <sc-img asp-for="BackgroundImage" />
                <div class="sections-circle__wrapper">
                    @{
                        var colors = new[] { "yellow", "green", "blue", "purple", "red", "orange" };
                    }
                    @if (Model?.Items != null && Model.Items.Any())
                    {
                        var i = 0;
                        foreach (var item in Model.Items)
                        {
                            <div class="sections-circle__point @colors[i]" name="@colors[i]" data-section="@item?.Fields?.SectionName?.Value"></div>
                            i++;
                        }
                        i = 0;
                        foreach (var item in Model.Items)
                        {
                            <div class="sections-circle__label" data-section="@item?.Fields?.SectionName?.Value">
                                <div class="sections-circle__label-text @colors[i]">
                                    @Html.Raw(item?.Fields?.Title?.Value.Replace("&", "& </br>"))
                                </div>
                            </div>
                            i++;
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="swiper-container business-segments-swiper" id="business-segments-swiper-id">
        <div class="swiper-wrapper">
            <div class="swiper-slide">
                <div class="business-segments-swiper__content">
                    <h1 class="h1">
                        @Html.Raw(Model?.Headline?.Value)
                    </h1>
                    <p class="plain-text">
                        @Html.Raw(Model?.CopyText?.Value)
                    </p>
                </div>
                <lottie-player class="business-segments-swiper__animation" background="transparent" autoplay src="assets/lottie-animation/_start.json"></lottie-player>
            </div>
            @if (Model?.Items != null && Model.Items.Any())
            {
                foreach (var item in Model.Items)
                {
                    <div class="swiper-slide">
                        <div class="business-segments-swiper__content">
                            <h1 class="h1">
                                @Html.Raw(item?.Fields?.Title?.Value)
                            </h1>
                            <p class="plain-text">
                                @Html.Raw(item?.Fields?.CopyText?.Value)
                            </p>
                        </div>
                        <div class="img-wrapper-stretch">
                            <sc-img asp-for="@item.Fields.Image" />
                        </div>
                        <sc-link class="main-btn main-btn--black" asp-for="@item.Fields.Link" />
                    </div>
                }
            }
        </div>

        <div class="swiper-pagination"></div>
    </div>

</div>