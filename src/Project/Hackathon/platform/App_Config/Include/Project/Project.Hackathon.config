<?xml version="1.0"?>
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:set="http://www.sitecore.net/xmlconfig/set/" xmlns:env="http://www.sitecore.net/xmlconfig/env/" xmlns:role="http://www.sitecore.net/xmlconfig/role/">
  <sitecore>
    <settings>
      <!--  ALIASES
            Turn the following setting on to use aliases
      -->
      <setting name="EnvinromentTest" value="DEV" env:reqire="DEV" />
      <setting name="EnvinromentTest" value="QA" env:reqire="QA" />
      <setting name="EnvinromentTest" value="UAT" env:reqire="UAT" />
      <setting name="EnvinromentTest" value="PROD" env:reqire="PROD" />
      
    </settings>
    <sites>
      <!--<site name="Hackathon"
            inherits="website"
            hostName="cm.Hackathon.local"
            rootPath="/sitecore/content/Hackathon"
            dictionaryDomain="{B741B17B-67B2-4DD8-A216-D092813871F0}"
            patch:before="site[@name='website']" />-->
    </sites>
    <javaScriptServices>
      <apps>
        <!--
          We need to configure an 'app' for the site as well in order to
          enable support for Experience Editor. The URL below will be used
          by the Experience Editor to render pages for editing.
        -->
        <!--<app name="Hackathon"
             sitecorePath="/sitecore/content/Hackathon"
             serverSideRenderingEngine="http"
             serverSideRenderingEngineEndpointUrl="http://rendering/jss-render"
             inherits="defaults" />
        <app name="Hackathon"
             sitecorePath="/sitecore/content/Test"
             serverSideRenderingEngine="http"
             serverSideRenderingEngineEndpointUrl="http://rendering/jss-render"
             serverSideRenderingEngineApplicationUrl="$(env:RENDERING_HOST_PUBLIC_URI)"
             inherits="defaults" />-->
      </apps>
    </javaScriptServices>
    <api>
      <!--
        Define the app's Sitecore GraphQL API endpoint
        Note: this can be removed if you are not using GraphQL.
        Note: the endpoint must be defined both for integrated and connected type GraphQL queries.
      -->
      <GraphQL>
        <endpoints>
          <carsGraphQLEndpoint url="/sitecore/api/graph/global" type="Sitecore.Services.GraphQL.Hosting.GraphQLEndpoint, Sitecore.Services.GraphQL.NetFxHost" resolve="true">
            <url>$(url)</url>

            <enabled>true</enabled>
            <enableSubscriptions>false</enableSubscriptions>

            <!-- lock down the endpoint when deployed to content delivery -->
            <graphiql role:require="ContentDelivery">false</graphiql>
            <enableSchemaExport role:require="ContentDelivery">false</enableSchemaExport>
            <enableStats role:require="ContentDelivery">false</enableStats>
            <enableCacheStats role:require="ContentDelivery">false</enableCacheStats>
            <disableIntrospection role:require="ContentDelivery">true</disableIntrospection>

            <schema hint="list:AddSchemaProvider">
              <!-- defaults are defined in Sitecore.Services.GraphQL.Content.config -->
              <content ref="/sitecore/api/GraphQL/defaults/content/schemaProviders/systemContent" param1="context" />
            </schema>

            <!-- Enables the 'jss' graph nodes that are preformatted to use with JSS rendering components, and the datasource resolving queries for JSS -->
            <extenders hint="list:AddExtender">
              <layoutExtender type="Sitecore.JavaScriptServices.GraphQL.JssExtender, Sitecore.JavaScriptServices.GraphQL" resolve="true" />
            </extenders>

            <!-- Determines the security of the service. Defaults are defined in Sitecore.Services.GraphQL.config -->
            <security ref="/sitecore/api/GraphQL/defaults/security/publicService" />

            <!-- Determines how performance is logged for the service. Defaults are defined in Sitecore.Services.GraphQL.config -->
            <performance ref="/sitecore/api/GraphQL/defaults/performance/standard" />

            <cache type="Sitecore.Services.GraphQL.Hosting.QueryTransformation.Caching.GraphQLQueryCache, Sitecore.Services.GraphQL.NetFxHost">
              <param desc="name">$(url)</param>
              <param desc="maxSize">50MB</param>
            </cache>
          </carsGraphQLEndpoint>
        </endpoints>
      </GraphQL>
    </api>
  </sitecore>
</configuration>